<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://schemas.microsoft.com/dotnet/2021/maui"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:core="clr-namespace:Syncfusion.Maui.Core;assembly=Syncfusion.Maui.Core"
             xmlns:inputs="clr-namespace:Syncfusion.Maui.Inputs;assembly=Syncfusion.Maui.Inputs"
             xmlns:buttons="clr-namespace:Syncfusion.Maui.Buttons;assembly=Syncfusion.Maui.Buttons"
             xmlns:calendar="clr-namespace:Syncfusion.Maui.Calendar;assembly=Syncfusion.Maui.Calendar"
             xmlns:picker="clr-namespace:Syncfusion.Maui.Picker;assembly=Syncfusion.Maui.Picker"
             x:Class="OsteoMAUIApp.Views.Event.CreateEvent"
             Title="Create Event">
    <ContentPage.Content>
        <ScrollView>
            <VerticalStackLayout Padding="20">
                <StackLayout Spacing="0">
                    <Label Text="Title" FontSize="14" TextColor="Gray" />
                    <Entry Text="{Binding Event.title}" Style="{StaticResource SFEntry}" />
                    <Label Text="{Binding Event.titleError}" Style="{StaticResource ErrorLabel}" />
                </StackLayout>
                <StackLayout Orientation="Horizontal" Margin="0,0,0,15">
                    <Label Text="Patient Type" FontSize="14" Margin="0,10,20,0" TextColor="Gray"/>
                    <buttons:SfRadioGroup  x:Name="PatientTypeRadiobuttonGroup" Orientation="Horizontal" SelectedValue="{Binding Event.patientType}"  HorizontalOptions="Start">
                        <buttons:SfRadioButton  Text="Human" CheckedColor="#59D6B8" FontSize="14" TextColor="Gray" Value="1"/>
                        <buttons:SfRadioButton Text="Animal" CheckedColor="#59D6B8" FontSize="14" TextColor="Gray" Value="2"/>
                    </buttons:SfRadioGroup>
                </StackLayout>
                <StackLayout Spacing="0">
                    <Label Text="Date" FontSize="14" TextColor="Gray" />
                    <Entry x:Name="dateEntry" Text="{Binding Event.sessionDay}" Style="{StaticResource SFEntry}" 
                           IsReadOnly="True" >
                        <Entry.GestureRecognizers>
                            <TapGestureRecognizer Tapped="OnOpenDatePickerClicked" />
                        </Entry.GestureRecognizers>
                    </Entry>
                    <Label Text="{Binding Event.sessionDayError}" Style="{StaticResource ErrorLabel}" />
                    <calendar:SfCalendar  x:Name="calendar" Mode="Dialog" RelativePosition="AlignTop"
                 View="Month" SelectionMode="Range" NavigationDirection="Horizontal" Background="Transparent" HeightRequest="0"
                 AllowViewNavigation="True" EnablePastDates="False" ActionButtonClicked="Calendar_FooterOkClicked">
                        <calendar:SfCalendar.HeaderView>
                            <calendar:CalendarHeaderView Height="70" Background="#59D6B8" TextFormat="ddd, MM, MMM yyyy" ShowNavigationArrows="True">
                                <calendar:CalendarHeaderView.TextStyle>
                                    <calendar:CalendarTextStyle TextColor="#fff" FontSize="18"
                                       />
                                </calendar:CalendarHeaderView.TextStyle>
                            </calendar:CalendarHeaderView>
                        </calendar:SfCalendar.HeaderView>
                        <calendar:SfCalendar.FooterView>
                            <calendar:CalendarFooterView ShowActionButtons="true" />
                        </calendar:SfCalendar.FooterView>
                    </calendar:SfCalendar>
                </StackLayout>

                <StackLayout Spacing="0" Margin="0,15,0,0">
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <StackLayout Orientation="Vertical" Margin="0,0,5,0" Spacing="0" Grid.Column="0">
                            <Label Text="Start Time" FontSize="14" TextColor="Gray" />
                            <Entry x:Name="ftimeEntry" Text="{Binding Event.fTime}" Style="{StaticResource SFEntry}" 
                              IsReadOnly="True">
                                <Entry.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="OnOpenFTimePickerClicked" />
                                </Entry.GestureRecognizers>
                            </Entry>
                            <Label Text="{Binding Event.fTimeError}" Style="{StaticResource ErrorLabel}" />
                            <picker:SfTimePicker x:Name="fromtimePicker" Mode="Dialog" OkButtonClicked="OnTimeFPickerOkButtonClicked" Format="HH_mm" MinuteInterval="15"  SelectedTime="{Binding Event.fTime}" HorizontalOptions="Start" IsVisible="False">
                                <picker:SfTimePicker.FooterView>
                                    <picker:PickerFooterView Height="40" OkButtonText="Save" CancelButtonText="Exit"/>
                                </picker:SfTimePicker.FooterView>
                            </picker:SfTimePicker>
                        </StackLayout>
                        <StackLayout Orientation="Vertical" Margin="5,0,0,0" Spacing="0" Grid.Column="1">
                            <Label Text="End Time" FontSize="14" TextColor="Gray" />
                            <Entry x:Name="ttimeEntry" Text="{Binding Event.tTime}" Style="{StaticResource SFEntry}" 
                               IsReadOnly="True">
                                <Entry.GestureRecognizers>
                                    <TapGestureRecognizer Tapped="OnOpenTTimePickerClicked" />
                                </Entry.GestureRecognizers>
                            </Entry>
                            <Label Text="{Binding Event.tTimeError}" Style="{StaticResource ErrorLabel}" />
                            <picker:SfTimePicker x:Name="totimePicker" Mode="Dialog" OkButtonClicked="OnTimeTPickerOkButtonClicked" Format="HH_mm" MinuteInterval="15"  SelectedTime="{Binding Event.tTime}" HorizontalOptions="Start" IsVisible="False">
                                <picker:SfTimePicker.FooterView>
                                    <picker:PickerFooterView Height="40" OkButtonText="Save" CancelButtonText="Exit"/>
                                </picker:SfTimePicker.FooterView>
                            </picker:SfTimePicker>
                        </StackLayout>
                    </Grid>

                </StackLayout>
                <StackLayout Orientation="Horizontal" Margin="0,0,0,15">
                    <Label Text="Allow Appointments" FontSize="14" Margin="0,10,20,0" TextColor="Gray"/>
                    <buttons:SfSwitch x:Name="sfSwitch" Margin="0,5,0,0"  HeightRequest="30" WidthRequest="60" IsOn="{Binding Event.isScheduleEnable}">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup  x:Name="CommonStates">
                                <VisualState x:Name="On">
                                    <VisualState.Setters>
                                        <Setter Property="SwitchSettings">
                                            <Setter.Value>
                                                <buttons:SwitchSettings
                                 ThumbBackground="#fff"
                                 ThumbStroke="#fff"
                                 TrackBackground="#59D6B8"
                                 TrackStroke="#fff"/>
                                            </Setter.Value>
                                        </Setter>
                                    </VisualState.Setters>
                                </VisualState>
                                <VisualState x:Name="Off">
                                    <VisualState.Setters>
                                        <Setter Property="SwitchSettings">
                                            <Setter.Value>
                                                <buttons:SwitchSettings
                                ThumbBackground="#fff"
                                ThumbStroke="#fff"
                                TrackBackground="#B5B5C3"
                                TrackStroke="#B5B5C3"/>
                                            </Setter.Value>
                                        </Setter>
                                    </VisualState.Setters>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                    </buttons:SfSwitch>
                </StackLayout>
                <StackLayout Spacing="0">
                    <Label Text="Appointment Length" FontSize="14" TextColor="Gray" />
                    <inputs:SfComboBox x:Name="SessionLengthComboBox"
                   ItemsSource="{Binding TreatmentLengthOptions}"
                   DisplayMemberPath="Text"
                   SelectedItem="{Binding Event.treatmentLength}" />
                    <Label Text="{Binding Event.treatmentLengthError}" Style="{StaticResource ErrorLabel}" />
                </StackLayout>
                <StackLayout Orientation="Horizontal" Margin="0,15,0,15">
                    <Label Text="Event Type" FontSize="14" Margin="0,15,20,0" TextColor="Gray"/>
                    <buttons:SfRadioGroup  x:Name="EventTypeRadiobuttonGroup" Orientation="Horizontal" Margin="0,5,0,0" SelectedValue="{Binding Event.privacy}"  HorizontalOptions="Start">
                        <buttons:SfRadioButton Text="Public" CheckedColor="#59D6B8" Value="1" FontSize="14" TextColor="Gray"/>
                        <buttons:SfRadioButton Text="Private" CheckedColor="#59D6B8" Value="2" FontSize="14" TextColor="Gray"/>
                    </buttons:SfRadioGroup>
                </StackLayout>
                <StackLayout Spacing="0" Margin="0,0,0,10">
                    <Label Text="Add Practitioner" FontSize="14" TextColor="Gray"/>
                    <inputs:SfComboBox x:Name="PractitionerComboBox" 
                   DisplayMemberPath="Name"
                   ItemsSource="{Binding PractitionerList}" 
                   SelectedItem="{Binding practitionerIds}"
                   NoResultsFoundText="Practitioner not found."
                   SelectionMode="Multiple"
                   IsEditable="True"
                   Text="{Binding SearchPractitioner, Mode=TwoWay, UpdateSourceEventName=PropertyChanged}"/>
                </StackLayout>
                <StackLayout Spacing="0" Margin="0,0,0,10">
                    <Label Text="Add Patient Group" FontSize="14" TextColor="Gray" />
                    <inputs:SfComboBox x:Name="PatientGroupComboBox" 
                               DisplayMemberPath="Name"
                               ItemsSource="{Binding PatientGroupList}" 
                               SelectedItems="{Binding Event.userGroupIds}"/>
                </StackLayout>
                <StackLayout Spacing="0" Margin="0,0,0,10">
                    <Label Text="Add Patient" FontSize="14" TextColor="Gray"/>
                    <inputs:SfComboBox x:Name="PatientComboBox" 
                   DisplayMemberPath="Name"
                   ItemsSource="{Binding PatientList}" 
                   SelectedItem="{Binding patientIds}"
                   SelectionMode="Multiple"
                   IsEditable="True"
                   Text="{Binding SearchPatient, Mode=TwoWay, UpdateSourceEventName=PropertyChanged}"/>
                </StackLayout>
                <StackLayout Spacing="0" Margin="0,0,0,10">
                    <Label Text="Set Reminder" FontSize="14" TextColor="Gray"/>
                    <inputs:SfComboBox x:Name="ReminderComboBox"
                    ItemsSource="{Binding ReminderOptions}"
                    DisplayMemberPath="Text"
                    SelectedItem="{Binding Event.reminder}" />
                    <Label Text="{Binding Event.reminderError}" Style="{StaticResource ErrorLabel}" />
                </StackLayout>
                <StackLayout Spacing="0">
                    <Grid Grid.Row="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <StackLayout Orientation="Vertical" Margin="0,0,5,0" Spacing="0" Grid.Column="0">
                            <Label Text="Adults" FontSize="14" TextColor="Gray" />
                            <Entry Keyboard="Numeric" Text="{Binding Event.adults}" Style="{StaticResource SFEntry}" />
                        </StackLayout>
                        <StackLayout Orientation="Vertical" Margin="5,0,0,0" Spacing="0" Grid.Column="1">
                            <Label Text="Kids" FontSize="14" TextColor="Gray" />
                            <Entry Keyboard="Numeric" Text="{Binding Event.kids}" Style="{StaticResource SFEntry}" />
                        </StackLayout>
                    </Grid>

                </StackLayout>
                <buttons:SfButton Margin="0,30" x:Name="sfButton" Background="#59D6B8" VerticalOptions="End" Clicked="CreateEventClicked" Text="Create" Style="{StaticResource button}" />
            </VerticalStackLayout>
        </ScrollView>
    </ContentPage.Content>
</ContentPage>